name: CI

on:
  push:
    branches: [ main, develop ]
  pull_request:
    branches: [ main ]

jobs:
  test:
    name: Test on ${{ matrix.os }}
    runs-on: ${{ matrix.os }}
    
    strategy:
      matrix:
        os: [ubuntu-latest, windows-latest, macos-latest]
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
    
    - name: Setup FVM
      uses: kuhnroyal/flutter-fvm-config-action@v2
      id: fvm-config
    
    - name: Setup Flutter
      uses: subosito/flutter-action@v2
      with:
        flutter-version: ${{ steps.fvm-config.outputs.FLUTTER_VERSION }}
        channel: ${{ steps.fvm-config.outputs.FLUTTER_CHANNEL }}
        cache: true
    
    - name: Setup Rust
      uses: dtolnay/rust-toolchain@stable
    
    - name: Cache Rust dependencies
      uses: Swatinem/rust-cache@v2
      with:
        workspaces: rust
    
    - name: Install dependencies (Linux)
      if: runner.os == 'Linux'
      run: |
        sudo apt-get update
        sudo apt-get install -y clang cmake ninja-build pkg-config libgtk-3-dev
    
    - name: Install Flutter dependencies
      run: flutter pub get
    
    - name: Run tests
      run: flutter test
    
    - name: Build application
      run: |
        if [ "${{ runner.os }}" == "Windows" ]; then
          flutter build windows --release
        elif [ "${{ runner.os }}" == "macOS" ]; then
          flutter build macos --release
        else
          flutter build linux --release
        fi
      shell: bash
