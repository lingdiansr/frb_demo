name: Complete Multi-Platform Release

on:
  push:
    tags:
      - 'v*'
  workflow_dispatch:

jobs:
  build-linux-x64:
    name: Build Linux x64
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
    
    - name: Setup FVM
      uses: kuhnroyal/flutter-fvm-config-action@v2
      id: fvm-config
    
    - name: Setup Flutter
      uses: subosito/flutter-action@v2
      with:
        flutter-version: ${{ steps.fvm-config.outputs.FLUTTER_VERSION }}
        channel: ${{ steps.fvm-config.outputs.FLUTTER_CHANNEL }}
        cache: true
    
    - name: Setup Rust
      uses: dtolnay/rust-toolchain@stable
    
    - name: Cache Rust dependencies
      uses: Swatinem/rust-cache@v2
      with:
        workspaces: rust
    
    - name: Install dependencies
      run: |
        sudo apt-get update
        sudo apt-get install -y clang cmake ninja-build pkg-config libgtk-3-dev
    
    - name: Install Flutter dependencies
      run: flutter pub get
    
    - name: Build Linux x64 application
      run: flutter build linux --release
    
    - name: Create Linux x64 tar.gz
      run: |
        cd build/linux/x64/release/bundle
        tar -czf ../../../../frb-demo-linux-x64.tar.gz *
    
    - name: Install Flutter Distributor
      run: dart pub global activate flutter_distributor
    
    - name: Build Linux x64 packages with FastForge
      run: |
        export PATH="$PATH":"$HOME/.pub-cache/bin"
        flutter_distributor package --platform linux --targets deb,appimage --skip-clean
    
    - name: Upload Linux x64 tar.gz
      uses: actions/upload-artifact@v4
      with:
        name: linux-x64-tar
        path: frb-demo-linux-x64.tar.gz
    
    - name: Upload Linux x64 DEB
      uses: actions/upload-artifact@v4
      with:
        name: linux-x64-deb
        path: dist/**/*x64.deb
    
    - name: Upload Linux x64 AppImage
      uses: actions/upload-artifact@v4
      with:
        name: linux-x64-appimage
        path: dist/**/*x86_64.AppImage

  build-linux-arm64:
    name: Build Linux arm64
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
    
    - name: Setup FVM
      uses: kuhnroyal/flutter-fvm-config-action@v2
      id: fvm-config
    
    - name: Setup Flutter
      uses: subosito/flutter-action@v2
      with:
        flutter-version: ${{ steps.fvm-config.outputs.FLUTTER_VERSION }}
        channel: ${{ steps.fvm-config.outputs.FLUTTER_CHANNEL }}
        cache: true
    
    - name: Setup Rust
      uses: dtolnay/rust-toolchain@stable
    
    - name: Cache Rust dependencies
      uses: Swatinem/rust-cache@v2
      with:
        workspaces: rust
    
    - name: Install dependencies
      run: |
        sudo apt-get update
        sudo apt-get install -y clang cmake ninja-build pkg-config libgtk-3-dev
        sudo apt-get install -y gcc-aarch64-linux-gnu g++-aarch64-linux-gnu
    
    - name: Install Flutter dependencies
      run: flutter pub get
    
    - name: Build Linux arm64 application
      run: |
        flutter build linux --release --target-platform linux-arm64
    
    - name: Create Linux arm64 tar.gz
      run: |
        cd build/linux/arm64/release/bundle
        tar -czf ../../../../frb-demo-linux-arm64.tar.gz *
    
    - name: Install Flutter Distributor
      run: dart pub global activate flutter_distributor
    
    - name: Build Linux arm64 packages with FastForge
      run: |
        export PATH="$PATH":"$HOME/.pub-cache/bin"
        flutter_distributor package --platform linux --targets deb,appimage --skip-clean
    
    - name: Upload Linux arm64 tar.gz
      uses: actions/upload-artifact@v4
      with:
        name: linux-arm64-tar
        path: frb-demo-linux-arm64.tar.gz
    
    - name: Upload Linux arm64 DEB
      uses: actions/upload-artifact@v4
      with:
        name: linux-arm64-deb
        path: dist/**/*arm64.deb
    
    - name: Upload Linux arm64 AppImage
      uses: actions/upload-artifact@v4
      with:
        name: linux-arm64-appimage
        path: dist/**/*aarch64.AppImage

  build-windows-x64:
    name: Build Windows x64
    runs-on: windows-latest
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
    
    - name: Setup FVM
      uses: kuhnroyal/flutter-fvm-config-action@v2
      id: fvm-config
    
    - name: Setup Flutter
      uses: subosito/flutter-action@v2
      with:
        flutter-version: ${{ steps.fvm-config.outputs.FLUTTER_VERSION }}
        channel: ${{ steps.fvm-config.outputs.FLUTTER_CHANNEL }}
        cache: true
    
    - name: Setup Rust
      uses: dtolnay/rust-toolchain@stable
    
    - name: Cache Rust dependencies
      uses: Swatinem/rust-cache@v2
      with:
        workspaces: rust
    
    - name: Install Flutter dependencies
      run: flutter pub get
    
    - name: Build Windows x64 application
      run: flutter build windows --release
    
    - name: Create Windows x64 zip
      run: |
        cd build/windows/x64/runner/Release
        7z a ../../../../frb-demo-windows-x64.zip *
    
    - name: Install Flutter Distributor
      run: dart pub global activate flutter_distributor
    
    - name: Build Windows x64 packages with FastForge
      run: |
        $env:PATH += ";$env:USERPROFILE\.pub-cache\bin"
        flutter_distributor package --platform windows --targets exe --skip-clean
    
    - name: Upload Windows x64 zip
      uses: actions/upload-artifact@v4
      with:
        name: windows-x64-zip
        path: frb-demo-windows-x64.zip
    
    - name: Upload Windows x64 EXE
      uses: actions/upload-artifact@v4
      with:
        name: windows-x64-exe
        path: dist/**/*windows-x64.exe

  build-windows-arm64:
    name: Build Windows arm64
    runs-on: windows-latest
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
    
    - name: Setup FVM
      uses: kuhnroyal/flutter-fvm-config-action@v2
      id: fvm-config
    
    - name: Setup Flutter
      uses: subosito/flutter-action@v2
      with:
        flutter-version: ${{ steps.fvm-config.outputs.FLUTTER_VERSION }}
        channel: ${{ steps.fvm-config.outputs.FLUTTER_CHANNEL }}
        cache: true
    
    - name: Setup Rust
      uses: dtolnay/rust-toolchain@stable
    
    - name: Cache Rust dependencies
      uses: Swatinem/rust-cache@v2
      with:
        workspaces: rust
    
    - name: Install Flutter dependencies
      run: flutter pub get
    
    - name: Build Windows arm64 application
      run: flutter build windows --release --target-platform windows-arm64
    
    - name: Create Windows arm64 zip
      run: |
        cd build/windows/arm64/runner/Release
        7z a ../../../../frb-demo-windows-arm64.zip *
    
    - name: Install Flutter Distributor
      run: dart pub global activate flutter_distributor
    
    - name: Build Windows arm64 packages with FastForge
      run: |
        $env:PATH += ";$env:USERPROFILE\.pub-cache\bin"
        flutter_distributor package --platform windows --targets exe --skip-clean
    
    - name: Upload Windows arm64 zip
      uses: actions/upload-artifact@v4
      with:
        name: windows-arm64-zip
        path: frb-demo-windows-arm64.zip
    
    - name: Upload Windows arm64 EXE
      uses: actions/upload-artifact@v4
      with:
        name: windows-arm64-exe
        path: dist/**/*windows-arm64.exe

  build-macos-x64:
    name: Build macOS x64
    runs-on: macos-latest
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
    
    - name: Setup FVM
      uses: kuhnroyal/flutter-fvm-config-action@v2
      id: fvm-config
    
    - name: Setup Flutter
      uses: subosito/flutter-action@v2
      with:
        flutter-version: ${{ steps.fvm-config.outputs.FLUTTER_VERSION }}
        channel: ${{ steps.fvm-config.outputs.FLUTTER_CHANNEL }}
        cache: true
    
    - name: Setup Rust
      uses: dtolnay/rust-toolchain@stable
      with:
        targets: x86_64-apple-darwin
    
    - name: Cache Rust dependencies
      uses: Swatinem/rust-cache@v2
      with:
        workspaces: rust
    
    - name: Install Flutter dependencies
      run: flutter pub get
    
    - name: Build macOS x64 application
      run: flutter build macos --release
    
    - name: Create macOS x64 tar.gz
      run: |
        cd build/macos/Build/Products/Release
        tar -czf ../../../../frb-demo-macos-x64.tar.gz *.app
    
    - name: Install Flutter Distributor
      run: dart pub global activate flutter_distributor
    
    - name: Build macOS x64 packages with FastForge
      run: |
        export PATH="$PATH":"$HOME/.pub-cache/bin"
        flutter_distributor package --platform macos --targets dmg --skip-clean
    
    - name: Upload macOS x64 tar.gz
      uses: actions/upload-artifact@v4
      with:
        name: macos-x64-tar
        path: frb-demo-macos-x64.tar.gz
    
    - name: Upload macOS x64 DMG
      uses: actions/upload-artifact@v4
      with:
        name: macos-x64-dmg
        path: dist/**/*macos-x64.dmg

  build-macos-arm64:
    name: Build macOS arm64
    runs-on: macos-latest
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
    
    - name: Setup FVM
      uses: kuhnroyal/flutter-fvm-config-action@v2
      id: fvm-config
    
    - name: Setup Flutter
      uses: subosito/flutter-action@v2
      with:
        flutter-version: ${{ steps.fvm-config.outputs.FLUTTER_VERSION }}
        channel: ${{ steps.fvm-config.outputs.FLUTTER_CHANNEL }}
        cache: true
    
    - name: Setup Rust
      uses: dtolnay/rust-toolchain@stable
      with:
        targets: aarch64-apple-darwin
    
    - name: Cache Rust dependencies
      uses: Swatinem/rust-cache@v2
      with:
        workspaces: rust
    
    - name: Install Flutter dependencies
      run: flutter pub get
    
    - name: Build macOS arm64 application
      run: flutter build macos --release
    
    - name: Create macOS arm64 tar.gz
      run: |
        cd build/macos/Build/Products/Release
        tar -czf ../../../../frb-demo-macos-arm64.tar.gz *.app
    
    - name: Install Flutter Distributor
      run: dart pub global activate flutter_distributor
    
    - name: Build macOS arm64 packages with FastForge
      run: |
        export PATH="$PATH":"$HOME/.pub-cache/bin"
        flutter_distributor package --platform macos --targets dmg --skip-clean
    
    - name: Upload macOS arm64 tar.gz
      uses: actions/upload-artifact@v4
      with:
        name: macos-arm64-tar
        path: frb-demo-macos-arm64.tar.gz
    
    - name: Upload macOS arm64 DMG
      uses: actions/upload-artifact@v4
      with:
        name: macos-arm64-dmg
        path: dist/**/*macos-arm64.dmg

  create-release:
    name: Create Release
    needs: [build-linux-x64, build-linux-arm64, build-windows-x64, build-windows-arm64, build-macos-x64, build-macos-arm64]
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
    
    - name: Download all Linux packages
      uses: actions/download-artifact@v4
      with:
        path: ./releases
    
    - name: Create Release
      uses: softprops/action-gh-release@v2
      if: startsWith(github.ref, 'refs/tags/')
      with:
        files: |
          releases/**/*.*
        draft: false
        prerelease: false
        generate_release_notes: true
      env:
        GITHUB_TOKEN: ${{ secrets.TOKEN }}
